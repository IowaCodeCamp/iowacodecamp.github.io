{"version":3,"file":"src_app_schedule_schedule_module_ts.js","mappings":"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","sources":["./src/app/schedule/components/room-session/room-session.component.ts","./src/app/schedule/components/room-session/room-session.component.html","./src/app/schedule/components/time-block/time-block.component.ts","./src/app/schedule/components/time-block/time-block.component.html","./src/app/schedule/resolvers/schedule.resolver.ts","./src/app/schedule/routing/schedule.routing.ts","./src/app/schedule/schedule.module.ts","./src/app/schedule/views/room-posters/room-posters.component.ts","./src/app/schedule/views/room-posters/room-posters.component.html","./src/app/schedule/views/schedule-container/schedule-container.component.ts","./src/app/schedule/views/schedule-container/schedule-container.component.html","./src/app/schedule/views/schedule/schedule.component.ts","./src/app/schedule/views/schedule/schedule.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Session } from '@app/shared/interfaces/session';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-room-session',\n  templateUrl: './room-session.component.html',\n})\nexport class RoomSessionComponent implements OnInit {\n  constructor(\n    private datePipe: DatePipe\n  ) { }\n\n  isOpen = true;\n\n  @Input() sessions:Session[] = [];\n  @Input() heading:string = 'Group Heading';\n\n  ngOnInit(): void {\n    // this.heading = this.getConstructedHeading();\n  }\n\n  // transformDate(date:Date) {\n  //   return this.datePipe.transform(date, 'shortTime');\n  // }\n\n  // getConstructedHeading():string {\n  //   const start = new Date(this.getEarliestStartDate());\n  //   const end = new Date(this.getLatestEndDate());\n\n  //   return `${this.transformDate(start)} - ${this.transformDate(end)}`;\n  // }\n\n  // getEarliestStartDate():number {\n  //   const times:number[] = [];\n\n  //   this.sessions.map(o => {\n  //     times.push(Date.parse(o.startsAt));\n  //   });\n\n  //   return Math.min(...times);\n  // }\n\n  // getLatestEndDate():number {\n  //   const times:number[] = [];\n\n  //   this.sessions.map(o => {\n  //     times.push(Date.parse(o.endsAt));\n  //   });\n\n  //   return Math.max(...times);\n  // }\n}\n","<article class=\"border-2 border-gray-light p-16 relative\">\n  <div>\n    <app-underlined-heading\n      alignment=\"center\"\n      [text]=\"'9:00 AM &ndash; 10:00 AM'\"\n    >\n    </app-underlined-heading>\n  </div>\n  <div class=\"flex flex-col md:flex-row\">\n    <h3 class=\"text-red h4\">\n      Session Title Ipsum Dolor\n        <!-- {{ session.title }} -->\n    </h3>\n    <div class=\"ml-auto\">\n      <app-tag [text]=\"'Level Ipsum'\"></app-tag>\n    </div>\n    <!-- <ng-container *ngIf=\"!session.isServiceSession\">\n      <div class=\"order-first md:order-last mb-8 md:mb-0 md:ml-auto\">\n        <ul class=\"flex items-center\">\n          <ng-container *ngFor=\"let item of categoryItems;\">\n            <li class=\"py-4\">\n              <app-tag [text]=\"item.name\"></app-tag>\n            </li>\n          </ng-container>\n        </ul>\n      </div>\n    </ng-container> -->\n  </div>\n  <!-- <div class=\"py-16\">\n    <p>\n      Short session description lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n      {{ session.description }\n    </p>\n  </div> -->\n  <div class=\"flex items-center gap-16\">\n    <div class=\"w-100 h-100\">\n      <img\n        class=\"aspect-square object-contain rounded-full\"\n        [src]=\"'/assets/images/persona.png'\"\n      />\n    </div>\n    <div>\n      <h3 class=\"mb-4 h5 text-orange\">\n        Firstname Lastname\n        <!-- {{ persona.firstName }} {{ persona.lastName }} -->\n      </h3>\n      <p class=\"p\">\n        Job Title at Company\n        <!-- {{ persona.title }} -->\n      </p>\n    </div>\n  </div>\n</article>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Session } from '@app/shared/interfaces/session';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-time-block',\n  templateUrl: './time-block.component.html',\n})\nexport class TimeBlockComponent implements OnInit {\n  constructor(\n    private datePipe: DatePipe\n  ) { }\n\n  isOpen = true;\n\n  @Input() sessions:Session[] = [];\n  @Input() heading:string = 'Group Heading';\n\n  ngOnInit(): void {\n    this.heading = this.getConstructedHeading();\n  }\n\n  handleAccordionButtonClick():void {\n    this.isOpen = !this.isOpen;\n  }\n\n  transformDate(date:Date) {\n    return this.datePipe.transform(date, 'shortTime');\n  }\n\n  getConstructedHeading():string {\n    const start = new Date(this.getEarliestStartDate());\n    const end = new Date(this.getLatestEndDate());\n\n    return `${this.transformDate(start)} - ${this.transformDate(end)}`;\n  }\n\n  getEarliestStartDate():number {\n    const times:number[] = [];\n\n    this.sessions.map(o => {\n      times.push(Date.parse(o.startsAt));\n    });\n\n    return Math.min(...times);\n  }\n\n  getLatestEndDate():number {\n    const times:number[] = [];\n\n    this.sessions.map(o => {\n      times.push(Date.parse(o.endsAt));\n    });\n\n    return Math.max(...times);\n  }\n}\n","<section class=\"border-2 border-gray-light p-16 relative\">\n  <div\n    class=\"flex justify-end mb-16\"\n  >\n    <app-accordion-button\n      [isOpen]=\"isOpen\"\n      (clickEmitter)=\"handleAccordionButtonClick()\"\n    >\n    </app-accordion-button>\n  </div>\n  <app-underlined-heading\n    alignment=\"center\"\n    [text]=\"heading\"\n  >\n  </app-underlined-heading>\n  <ng-container *ngIf=\"isOpen\">\n    <div class=\"max-w-800 mx-auto pt-40 pb-32\">\n      <ul>\n        <ng-container *ngFor=\"let session of sessions; let i = index\">\n          <li>\n            <app-session\n              [session]=\"session\"\n            >\n            </app-session>\n            <app-hr *ngIf=\"i < sessions.length - 1\"></app-hr>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n  </ng-container>\n</section>\n","import { inject, makeStateKey, TransferState } from \"@angular/core\";\nimport { ActivatedRouteSnapshot } from \"@angular/router\";\nimport allSessionizeData from '../../../assets/json/allSessionizeData.json';\n\nexport function scheduleDataResolver(\n  route: ActivatedRouteSnapshot\n): Promise<any> {\n  const transferState = inject(TransferState);\n  const key = makeStateKey<any>(\"schedule\");\n  const storedData = transferState.get(key, null);\n\n  if (storedData) {\n    return storedData;\n  } else {\n    const response = new Promise((resolve) => resolve(allSessionizeData));\n\n    return response.then((data:any) => {\n      transferState.set(key, data);\n\n      return data;\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ScheduleComponent } from '../views/schedule/schedule.component';\nimport { ScheduleContainerComponent } from '../views/schedule-container/schedule-container.component';\nimport { scheduleDataResolver } from '../resolvers/schedule.resolver';\nimport { RoomPostersComponent } from '../views/room-posters/room-posters.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScheduleContainerComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        component: ScheduleComponent,\n        resolve: {\n          schedule: scheduleDataResolver\n        }\n      },\n      {\n        path: 'room-posters',\n        pathMatch: 'full',\n        component: RoomPostersComponent,\n        // resolve: {\n        //   roomPosterInfo: roomPosterInfoDataResolver\n        // }\n      }\n    ]\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ScheduleRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScheduleRoutingModule } from './routing/schedule.routing';\nimport { ScheduleComponent } from './views/schedule/schedule.component';\nimport { LayoutModule } from '@app/layout/layout.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { TimeBlockComponent } from './components/time-block/time-block.component';\nimport { ScheduleContainerComponent } from './views/schedule-container/schedule-container.component';\nimport { RoomPostersComponent } from './views/room-posters/room-posters.component';\nimport { RoomSessionComponent } from './components/room-session/room-session.component';\n\n@NgModule({\n  declarations: [\n    RoomSessionComponent,\n    RoomPostersComponent,\n    TimeBlockComponent,\n    ScheduleContainerComponent,\n    ScheduleComponent\n  ],\n  imports: [\n    ScheduleRoutingModule,\n    LayoutModule,\n    CommonModule,\n    SharedModule\n  ],\n  providers: [\n  ]\n})\nexport class ScheduleModule {}\n","import { KeyValue, isPlatformBrowser } from '@angular/common';\nimport { Component, Inject, OnInit, PLATFORM_ID } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-room-posters',\n  templateUrl: './room-posters.component.html',\n})\nexport class RoomPostersComponent implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute\n  ) {\n  }\n\n  data:any;\n  sponsorLevelColumnHeadings:string[] = [];\n\n  async ngOnInit() {\n    // this.data = await this.activatedRoute.snapshot.data[\"sponsorsInfo\"];\n\n    // this.setSponsorLevelHeadings();\n  }\n\n  // setSponsorLevelHeadings() {\n  //   const firstObj = this.data.sponsor_levels[0];\n\n  //   if (firstObj) {\n  //     this.sponsorLevelColumnHeadings = Object.keys(firstObj).map(s => s.replace(\"_\",' '));\n  //   }\n  // }\n\n  // originalOrder = (a: KeyValue<number,string>, b: KeyValue<number,string>): number => {\n  //   return 0;\n  // }\n}\n","<router-outlet></router-outlet>\n<main>\n  <ng-container *ngFor=\"let i of [1,2,3];\">\n    <section class=\"break-inside-avoid overflow-hidden w-11in h-17in mx-auto border\">\n      <div class=\"p-32\">\n        <div class=\"relative pt-12\">\n          <div class=\"w-100 absolute left-0 top-0\">\n            <app-logo></app-logo>\n          </div>\n          <h1 class=\"h1 leading-none mx-auto text-red text-center\">Room #1XX</h1>\n          <div class=\"w-160 mx-auto\">\n            <img\n              class=\"aspect-square object-contain\"\n              alt=\"Far Reach logo\"\n              src=\"/assets/images/sponsors/far-reach.png\"\n            >\n          </div>\n          <div class=\"\">\n            <ul>\n              <ng-container *ngFor=\"let j of [1,2,3,4,5];\">\n                <li>\n                    <app-room-session>\n                    </app-room-session>\n                </li>\n              </ng-container>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  </ng-container>\n</main>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-schedule-container',\n  templateUrl: './schedule-container.component.html',\n})\nexport class ScheduleContainerComponent {\n  constructor() { }\n}\n","<router-outlet></router-outlet>\n\n","import { Component, Inject, Input, OnInit, PLATFORM_ID } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n  ) {\n  }\n\n  isBrowser = false;\n  jsonFile: string = 'allSessionizeData.json';\n  sessionGroups = {};\n\n  async ngOnInit() {\n    const allSessionizeData = await this.activatedRoute.snapshot.data[\"schedule\"];\n\n    this.sessionGroups = this.groupBy(allSessionizeData.sessions, 'startsAt')\n  }\n\n  // lacking built-in Object.groupBy()\n  groupBy(items:[], key:string):object {\n    return items.reduce(\n      (result, item) => ({\n        ...result,\n        [item[key]]: [\n          ...(result[item[key]] || []),\n          item,\n        ],\n      }),\n      {},\n    );\n  }\n}\n","<router-outlet></router-outlet>\n<app-header></app-header>\n<app-shell pageTitle=\"Schedule\">\n  <div class=\"max-w-640 mx-auto mb-60\">\n    <div class=\"prose\">\n      <p>\n        Drop by the sponsor booths between sessions to win prizes and meet some pretty awesome supporters!\n      </p>\n    </div>\n  </div>\n  <div class=\"max-w-1024 mx-auto mb-60\">\n    <ul>\n      <ng-container *ngFor=\"let group of sessionGroups | keyvalue\">\n        <li class=\"mb-32\">\n            <app-time-block\n              [sessions]=\"group.value\"\n            >\n            </app-time-block>\n        </li>\n      </ng-container>\n    </ul>\n  </div>\n</app-shell>\n<app-footer></app-footer>\n"],"names":["RoomSessionComponent","constructor","datePipe","isOpen","sessions","heading","ngOnInit","_","i0","ɵɵdirectiveInject","i1","DatePipe","_2","selectors","inputs","decls","vars","consts","template","RoomSessionComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵsanitizeUrl","ɵɵelementContainerStart","ɵɵtemplate","TimeBlockComponent_ng_container_4_ng_container_3_app_hr_3_Template","ɵɵelementContainerEnd","session_r2","i_r3","ctx_r1","length","TimeBlockComponent_ng_container_4_ng_container_3_Template","ctx_r0","TimeBlockComponent","getConstructedHeading","handleAccordionButtonClick","transformDate","date","transform","start","Date","getEarliestStartDate","end","getLatestEndDate","times","map","o","push","parse","startsAt","Math","min","endsAt","max","TimeBlockComponent_Template","ɵɵlistener","TimeBlockComponent_Template_app_accordion_button_clickEmitter_2_listener","TimeBlockComponent_ng_container_4_Template","inject","makeStateKey","TransferState","allSessionizeData","scheduleDataResolver","route","transferState","key","storedData","get","response","Promise","resolve","then","data","set","CommonModule","RouterModule","ScheduleComponent","ScheduleContainerComponent","RoomPostersComponent","routes","path","component","children","pathMatch","schedule","ScheduleRoutingModule","_3","forChild","imports","exports","LayoutModule","SharedModule","ScheduleModule","declarations","RoomPostersComponent_ng_container_2_ng_container_12_Template","ɵɵpureFunction0","_c0","activatedRoute","sponsorLevelColumnHeadings","_asyncToGenerator","ActivatedRoute","RoomPostersComponent_Template","RoomPostersComponent_ng_container_2_Template","_c1","ScheduleContainerComponent_Template","group_r1","value","isBrowser","jsonFile","sessionGroups","_this","snapshot","groupBy","items","reduce","result","item","ScheduleComponent_Template","ScheduleComponent_ng_container_9_Template","ɵɵpipeBind1"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
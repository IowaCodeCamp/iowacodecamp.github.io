{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/routing/app.routing.ts","./src/app/core/services/base-modal.service.ts","./src/app/core/services/toast.service.ts","./src/app/core/store/app.store.ts","./src/app/core/store/router/custom-serializer.ts","./src/app/layout/components/modal-components/modal-overlay/modal-overlay.component.ts","./src/app/layout/components/modal-components/modal-overlay/modal-overlay.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit, ViewContainerRef } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { AppState } from \"./core/store/app.state\";\nimport { BaseModalService } from \"./core/services/base-modal.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n})\nexport class AppComponent {\n  constructor(\n    private vc: ViewContainerRef,\n    private baseModalService: BaseModalService\n  ) {}\n\n  // eslint-disable-next-line @angular-eslint/use-lifecycle-interface\n  ngOnInit() {\n    this.baseModalService.setViewContainer(this.vc);\n  }\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<router-outlet>\n</router-outlet>\n","import { APP_ID, Inject, NgModule, PLATFORM_ID } from \"@angular/core\";\nimport { CoreModule } from \"./core/core.module\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\nimport { ToastrModule } from \"ngx-toastr\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { isPlatformBrowser } from \"@angular/common\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    CoreModule,\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n\n    // Instrumentation must be imported after importing StoreModule (config is optional)\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n    }),\n    ToastrModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    @Inject(APP_ID) private appId: string\n  ) {\n    const platform = isPlatformBrowser(platformId)\n      ? \"in the browser\"\n      : \"on the server\";\n    console.log(`Running ${platform} with appId=${appId}`);\n  }\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './routing/app.routing';\nimport { AppStoreModule } from './store/app.store';\nimport { ToastService } from './services/toast.service';\nimport { BaseModalService } from './services/base-modal.service';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    AppStoreModule\n  ],\n  providers: [\n    ToastService,\n    BaseModalService\n  ],\n  exports: [\n    AppRoutingModule,\n    AppStoreModule\n  ]\n})\nexport class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    core: CoreModule\n  ) {\n    if (core) {\n      throw new Error('CoreModule already instantiated!');\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('../../public/public.module').then(m => m.PublicModule),\n  },\n  {\n    path: 'speakers',\n    loadChildren: () => import('../../speakers/speakers.module').then(m => m.SpeakersModule),\n  },\n  {\n    path: 'sponsors',\n    loadChildren: () => import('../../sponsors/sponsors.module').then(m => m.SponsorsModule),\n  },\n  {\n    path: 'sessions',\n    loadChildren: () => import('../../sessions/sessions.module').then(m => m.SessionsModule),\n  },\n  {\n    path: 'schedule',\n    loadChildren: () => import('../../schedule/schedule.module').then(m => m.ScheduleModule),\n  },\n  {\n    path: 'about',\n    loadChildren: () => import('../../about/about.module').then(m => m.AboutModule),\n    data: { title: 'About' }\n  },\n  {\n    path: 'contact',\n    loadChildren: () => import('../../contact/contact.module').then(m => m.ContactModule),\n    data: { title: 'Contact' }\n  },\n  {\n    path: 'resources',\n    loadChildren: () => import('../../resources/resources.module').then(m => m.ResourcesModule),\n    data: { title: 'resources' }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabledBlocking'\n})],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","import { ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\nimport { ModalOverlayComponent } from '@app/layout/components/modal-components/modal-overlay/modal-overlay.component';\nimport { ComponentType } from 'ngx-toastr';\n\ntype DialogMap = {\n  [id: string]: ComponentRef<any>;\n};\n\n@Injectable()\nexport class BaseModalService {\n  private vc!: ViewContainerRef;\n\n  dialogMap: DialogMap = {};\n  overlayComponentRef!: ComponentRef<ModalOverlayComponent> | null;\n\n  constructor() {}\n\n  open(component: ComponentType<any>) {\n    if(!this.overlayComponentRef) {\n      this.overlayComponentRef = this.vc.createComponent(ModalOverlayComponent);\n    }\n    const dialogRef = this.vc.createComponent(component);\n    dialogRef.instance.id = 'dialog' + Object.keys(this.dialogMap).length;\n    this.dialogMap[dialogRef.instance.id] = dialogRef;\n    return dialogRef;\n  }\n\n  closeAll():void {\n    const keys = Object.keys(this.dialogMap);\n\n    keys.forEach(key => {\n      this.close(key);\n    });\n  }\n\n  close(id: string) {\n    this.dialogMap[id].destroy();\n    delete this.dialogMap[id];\n    if(Object.keys(this.dialogMap).length === 0 && this.overlayComponentRef) {\n      this.overlayComponentRef?.destroy();\n      this.overlayComponentRef = null;\n    }\n  }\n\n  setViewContainer(vc: ViewContainerRef) {\n    this.vc = vc;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n    constructor(public toast: ToastrService) {}\n\n  showErrorToast(errorMessage: string) {\n    this.toast.error(errorMessage, 'Error', { positionClass: 'toast-top-center' });\n  }\n\n  showSuccessToast(successMessage: string) {\n    this.toast.success(successMessage, 'Success', { positionClass: 'toast-top-center' });\n  }\n\n  showInfoToast(infoMessage: string) {\n    this.toast.info(infoMessage, 'info', { positionClass: 'toast-top-center' });\n  }\n\n  showWarningToast(warningMessage: string) {\n    this.toast.warning(warningMessage, 'Warning', { positionClass: 'toast-top-center' });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { routerReducer, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { CustomSerializer } from './router/custom-serializer';\nimport { EntityDataModule } from '@ngrx/data';\n\n@NgModule({\n  imports: [\n    StoreModule.forRoot(\n      {\n          router: routerReducer\n      }\n    ),\n    StoreRouterConnectingModule.forRoot({\n      stateKey: 'router',\n      serializer: CustomSerializer\n    }),\n    EffectsModule.forRoot([]),\n    EntityDataModule.forRoot({}),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n\n  exports: [],\n  declarations: [],\n  providers: []\n})\nexport class AppStoreModule { }\n","import { Params, RouterStateSnapshot } from '@angular/router';\nimport { RouterStateSerializer } from '@ngrx/router-store';\n\nexport interface RouterStateUrl {\n    url: string;\n    params: Params;\n    queryParams: Params;\n}\n\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        let route = routerState.root;\n        const paramMap = new Map(Object.keys(route.params).map(key => [key, route.params[key]]));\n        while (route.firstChild) {\n          route = route.firstChild;\n          Object.keys(route.params).forEach(key => paramMap.set(key, route.params[key]));\n        }\n        const {\n          url,\n          root: { queryParams },\n        } = routerState;\n\n        const params = Object.fromEntries(paramMap);\n\n        return { url, params, queryParams };\n    }\n}\n","import { Component, isStandalone, ViewContainerRef } from '@angular/core';\nimport { BaseModalService } from '@app/core/services/base-modal.service';\n\n@Component({\n  selector: 'app-modal-overlay',\n  templateUrl: './modal-overlay.component.html',\n  standalone: true\n})\nexport class ModalOverlayComponent {\n  constructor(\n    public viewContainerRef: ViewContainerRef,\n    private baseModalService: BaseModalService,\n  ) {}\n\n  handleButtonClick():void {\n    this.baseModalService.closeAll();\n  }\n}\n","<button\n  class=\"fixed inset-0 bg-black bg-opacity-80 z-modal-overlay\"\n  type=\"button\"\n  (click)=\"handleButtonClick()\"\n>\n  <span class=\"sr-only\">Close dialog</span>\n</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --configuration production` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:81/api',\n  tokenAuthority: 'http://localhost:5001'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["AppComponent","constructor","vc","baseModalService","ngOnInit","setViewContainer","_","i0","ɵɵdirectiveInject","ViewContainerRef","i1","BaseModalService","_2","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement","APP_ID","PLATFORM_ID","CoreModule","BrowserModule","StoreDevtoolsModule","ToastrModule","BrowserAnimationsModule","isPlatformBrowser","ReactiveFormsModule","FormsModule","AppModule","platformId","appId","platform","console","log","ɵɵinject","bootstrap","_3","instrument","maxAge","forRoot","declarations","imports","i2","HttpClientModule","AppRoutingModule","AppStoreModule","ToastService","core","Error","exports","RouterModule","routes","path","loadChildren","then","m","PublicModule","SpeakersModule","SponsorsModule","SessionsModule","ScheduleModule","AboutModule","data","title","ContactModule","ResourcesModule","initialNavigation","ModalOverlayComponent","dialogMap","open","component","overlayComponentRef","createComponent","dialogRef","instance","id","Object","keys","length","closeAll","forEach","key","close","destroy","factory","ɵfac","toast","showErrorToast","errorMessage","error","positionClass","showSuccessToast","successMessage","success","showInfoToast","infoMessage","info","showWarningToast","warningMessage","warning","ToastrService","providedIn","StoreModule","environment","EffectsModule","routerReducer","StoreRouterConnectingModule","CustomSerializer","EntityDataModule","router","stateKey","serializer","production","StoreRootModule","i3","EffectsRootModule","i4","i5","serialize","routerState","route","root","paramMap","Map","params","map","firstChild","set","url","queryParams","fromEntries","viewContainerRef","handleButtonClick","standalone","features","ɵɵStandaloneFeature","consts","ModalOverlayComponent_Template","ɵɵelementStart","ɵɵlistener","ModalOverlayComponent_Template_button_click_0_listener","ɵɵtext","ɵɵelementEnd","apiUrl","tokenAuthority","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}